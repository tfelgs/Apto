{"ast":null,"code":"var _jsxFileName = \"/Users/dylanfelgenhauer/Desktop/react-app/search-tool/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport React, { useState } from 'react';\nimport { Dropdown, Input, Grid, Button, Form, Select, Container, Segment, Divider } from 'semantic-ui-react';\nimport { getOptions, getMetrics, getMeasures, getTimeOptions } from './Utility';\nimport 'react-datez/dist/css/react-datez.css';\nimport { ReactDatez } from 'react-datez';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [restaurantIds, setRestaurantIds] = useState([]);\n  const [fromHour, setFromHour] = useState(6);\n  const [toHour, setToHour] = useState(29);\n  const [metrics, setMetrics] = useState(null);\n  const [measures, setMeasures] = useState(null);\n  const [value, setValue] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Segment, {\n            className: \"Segment\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              centered: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n                columns: \"1\",\n                children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n                  textAlign: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Custom Search Query Tool\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 29,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                columns: \"1\",\n                children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n                  children: /*#__PURE__*/_jsxDEV(Form\n                  /* onSubmit={() => onSubmit()} */\n                  , {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        style: {\n                          fontWeight: \"bold\"\n                        },\n                        children: \"Restaurant Id\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 36,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                        options: getOptions,\n                        placeholder: \"Select Restaurant Id\",\n                        multiple: true,\n                        selection: true,\n                        onChange: (event, data) => setRestaurantIds(data.value),\n                        value: restaurantIds\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 37,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 35,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n                        control: Select,\n                        label: \"Transaction Time Start\",\n                        options: getTimeOptions,\n                        value: fromHour,\n                        onChange: (event, data) => setFromHour(data.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 47,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                        control: Select,\n                        label: \"Transaction Time End\",\n                        options: getTimeOptions,\n                        value: toHour,\n                        onChange: (event, data) => setToHour(data.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 54,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: \"exampleDate2\",\n                          children: \"Start Date\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 62,\n                          columnNumber: 49\n                        }, this), /*#__PURE__*/_jsxDEV(ReactDatez, {\n                          name: \"dateInput\",\n                          startDate: \"01/01/2000\",\n                          endDate: new Date(),\n                          handleChange: value => {\n                            setStartDate(value);\n                          },\n                          value: startDate,\n                          allowPast: true,\n                          dateFormat: \"MM/DD/YYYY\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 63,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 61,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: \"exampleDate2\",\n                          children: \"End Date\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 76,\n                          columnNumber: 49\n                        }, this), /*#__PURE__*/_jsxDEV(ReactDatez, {\n                          name: \"dateInput\",\n                          startDate: \"01/01/2000\",\n                          endDate: new Date(),\n                          handleChange: value => {\n                            setEndDate(value);\n                          },\n                          value: endDate,\n                          allowPast: true,\n                          dateFormat: \"MM/DD/YYYY\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 77,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 75,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 46,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n                        control: Select,\n                        options: getMetrics,\n                        label: \"Metric to Measure by\",\n                        placeholder: \"Choose Metric\",\n                        onChange: (event, data) => setMetrics(data.value),\n                        value: metrics\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 91,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                        control: Select,\n                        label: \"Measure\",\n                        options: getMeasures,\n                        placeholder: \"Measure\",\n                        onChange: (event, data) => setMeasures(data.value),\n                        value: measures\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 99,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                        control: Input,\n                        label: \"Value\",\n                        placeholder: \"Value\",\n                        onChange: (event, data) => setValue(data.value),\n                        value: value,\n                        inputType: number\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 107,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                      children: /*#__PURE__*/_jsxDEV(Form.Field, {\n                        children: /*#__PURE__*/_jsxDEV(Button\n                        /* onClick={() => addCriteria()} */\n                        , {\n                          color: \"violet\",\n                          children: \"Add Criteria\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 118,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 117,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        color: \"olive\",\n                        type: \"submit\",\n                        children: \"Submit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 123,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 34,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Segment, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n/* <div className=\"App\">\n      <Grid>\n      <h1 className = \"Title\">\n        Resturant Data Helper\n      </h1>\n      <div className = \"Together\">\n      <Dropdown\n      className = \"Rpad\"\n      multiple\n      selection\n      options={getOptions}\n      placeholder='Choose Resturants'\n      />\n      <DatePicker\n      selected={selectedDate}\n      onChange={date => setSelectedDate(date)}\n      maxDate={new Date()}\n      showYearDropdown\n      scrollableMonthYearDropdown\n      isClearable\n      />\n      <div className = \"App-row\">\n      <div className = \"App\">\n      <h3>From:</h3>\n      <h3>To:</h3>\n      </div>\n      <div className = \"App\">\n      <TimePicker\n      className = \"App-bot\"\n      disableClock = { true }\n      clearIcon = { false }\n      />\n      <TimePicker\n      disableClock = { true }\n      clearIcon = { false }\n      />\n      </div>\n      </div>\n      <Dropdown\n      className = \"Rpad\"\n      selection\n      options={getMetrics}\n      placeholder='Choose Metric'\n      />\n      <Dropdown\n      className = \"Width-change.Dropdown\"\n      selection\n      options={getMeasures}\n      placeholder='Measure'\n      fluid\n      />\n      <Input\n      size = 'small'\n      placeholder = 'Value'\n      />\n      </div>\n      </Grid>\n    </div> */\n\n\n_s(App, \"31k7A7KiB+R3OpqPR7zWNtB2pCA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dylanfelgenhauer/Desktop/react-app/search-tool/src/App.js"],"names":["React","useState","Dropdown","Input","Grid","Button","Form","Select","Container","Segment","Divider","getOptions","getMetrics","getMeasures","getTimeOptions","ReactDatez","App","startDate","setStartDate","endDate","setEndDate","restaurantIds","setRestaurantIds","fromHour","setFromHour","toHour","setToHour","metrics","setMetrics","measures","setMeasures","value","setValue","fontWeight","event","data","Date","number"],"mappings":"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","sourcesContent":["import './App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport React, { useState } from 'react'\nimport { Dropdown, Input, Grid, Button, Form, Select, Container, Segment, Divider } from 'semantic-ui-react'\nimport { getOptions, getMetrics, getMeasures, getTimeOptions } from './Utility';\nimport 'react-datez/dist/css/react-datez.css';\nimport { ReactDatez } from 'react-datez'\n\n\nfunction App() {\n  const [startDate, setStartDate] = useState(null)\n  const [endDate, setEndDate] = useState(null)\n  const [restaurantIds, setRestaurantIds] = useState([]);\n  const [fromHour, setFromHour] = useState(6);\n  const [toHour, setToHour] = useState(29);\n  const [metrics, setMetrics] = useState(null);\n  const [measures, setMeasures] = useState(null);\n  const [value, setValue] = useState(null);\n\n  return (\n    <div className=\"App\">\n            <Grid>\n                <Grid.Row>\n                    <Container>\n                        <Segment className=\"Segment\">\n                            <Grid centered>\n                                <Grid.Row columns=\"1\">\n                                    <Grid.Column textAlign=\"center\">\n                                        <h3>Custom Search Query Tool</h3>\n                                    </Grid.Column>\n                                </Grid.Row>\n                                <Grid.Row columns=\"1\">\n                                    <Grid.Column>\n                                        <Form /* onSubmit={() => onSubmit()} */>\n                                            <Form.Field>\n                                                <label style={{fontWeight: \"bold\"}}>Restaurant Id</label>\n                                                <Dropdown\n                                                    options={getOptions}\n                                                    placeholder={\"Select Restaurant Id\"}\n                                                    multiple\n                                                    selection\n                                                    onChange={(event, data) => setRestaurantIds(data.value)}\n                                                    value={restaurantIds}\n                                                />\n                                            </Form.Field>\n                                            <Form.Group>\n                                                <Form.Field\n                                                    control={Select}\n                                                    label={\"Transaction Time Start\"}\n                                                    options={getTimeOptions}\n                                                    value={fromHour}\n                                                    onChange={(event, data) => setFromHour(data.value)}\n                                                />\n                                                <Form.Field\n                                                    control={Select}\n                                                    label={\"Transaction Time End\"}\n                                                    options={getTimeOptions}\n                                                    value={toHour}\n                                                    onChange={(event, data) => setToHour(data.value)}\n                                                />\n                                                <Form.Field>\n                                                <label htmlFor=\"exampleDate2\">Start Date</label>\n                                                <ReactDatez\n                                                    name=\"dateInput\"\n                                                    startDate=\"01/01/2000\"\n                                                    endDate= {new Date()}\n                                                    handleChange={value => {\n                                                    setStartDate(value);\n                                                    }}\n                                                    value={startDate}\n                                                    allowPast= { true }\n                                                    dateFormat= \"MM/DD/YYYY\"\n                                                />\n                                                </Form.Field>\n                                                <Form.Field>\n                                                <label htmlFor=\"exampleDate2\">End Date</label>\n                                                <ReactDatez\n                                                    name=\"dateInput\"\n                                                    startDate=\"01/01/2000\"\n                                                    endDate= {new Date()}\n                                                    handleChange={value => {\n                                                    setEndDate(value);\n                                                    }}\n                                                    value={endDate}\n                                                    allowPast= { true }\n                                                    dateFormat= \"MM/DD/YYYY\"\n                                                />\n                                                </Form.Field>\n                                            </Form.Group>\n                                            <Form.Group>\n                                                <Form.Field\n                                                    control={Select}\n                                                    options={getMetrics}\n                                                    label={\"Metric to Measure by\"}\n                                                    placeholder='Choose Metric'\n                                                    onChange={(event, data) => setMetrics(data.value)}\n                                                    value={metrics}\n                                                />\n                                                <Form.Field\n                                                    control={Select}\n                                                    label={\"Measure\"}\n                                                    options={getMeasures}\n                                                    placeholder='Measure'\n                                                    onChange={(event, data) => setMeasures(data.value)}\n                                                    value={measures}\n                                                />\n                                                <Form.Field\n                                                    control={Input}\n                                                    label={\"Value\"}\n                                                    placeholder='Value'\n                                                    onChange={(event, data) => setValue(data.value)}\n                                                    value={value}\n                                                    inputType={number}\n                                                />\n                                            </Form.Group>\n                                            <Form.Group>\n                                                <Form.Field>\n                                                    <Button /* onClick={() => addCriteria()} */ color=\"violet\">Add Criteria</Button>\n                                                </Form.Field>\n                                                \n                                            </Form.Group>\n                                            <Form.Field>\n                                                <Button color=\"olive\" type=\"submit\">\n                                                    Submit\n                                                </Button>\n                                            </Form.Field>\n                                        </Form>\n                                    </Grid.Column>\n                                </Grid.Row>\n                            </Grid>\n                        </Segment>\n                    </Container>\n                </Grid.Row>\n                <Divider hidden></Divider>\n                <Grid.Row>\n                    <Container>\n                        <Segment>\n                            <h3>Results</h3>\n                        </Segment>\n                    </Container>\n                </Grid.Row>\n            </Grid>\n        </div>\n  );\n}\n/* <div className=\"App\">\n      <Grid>\n      <h1 className = \"Title\">\n        Resturant Data Helper\n      </h1>\n      <div className = \"Together\">\n      <Dropdown\n      className = \"Rpad\"\n      multiple\n      selection\n      options={getOptions}\n      placeholder='Choose Resturants'\n      />\n      <DatePicker\n      selected={selectedDate}\n      onChange={date => setSelectedDate(date)}\n      maxDate={new Date()}\n      showYearDropdown\n      scrollableMonthYearDropdown\n      isClearable\n      />\n      <div className = \"App-row\">\n      <div className = \"App\">\n      <h3>From:</h3>\n      <h3>To:</h3>\n      </div>\n      <div className = \"App\">\n      <TimePicker\n      className = \"App-bot\"\n      disableClock = { true }\n      clearIcon = { false }\n      />\n      <TimePicker\n      disableClock = { true }\n      clearIcon = { false }\n      />\n      </div>\n      </div>\n      <Dropdown\n      className = \"Rpad\"\n      selection\n      options={getMetrics}\n      placeholder='Choose Metric'\n      />\n      <Dropdown\n      className = \"Width-change.Dropdown\"\n      selection\n      options={getMeasures}\n      placeholder='Measure'\n      fluid\n      />\n      <Input\n      size = 'small'\n      placeholder = 'Value'\n      />\n      </div>\n      </Grid>\n    </div> */\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}