{"ast":null,"code":"var _jsxFileName = \"/Users/dylanfelgenhauer/Desktop/react-app/search-tool/src/App.js\";\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport React from 'react';\nimport { Dropdown } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getOptions = (number, prefix = 'Choice ') => _.times(number, index => ({\n  key: index,\n  text: `${prefix}${index}`,\n  value: index\n}));\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Dropdown, {\n      multiple: true,\n      search: true,\n      selection: true,\n      options: getOptions(5),\n      placeholder: \"I stay open on change\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dylanfelgenhauer/Desktop/react-app/search-tool/src/App.js"],"names":["React","Dropdown","getOptions","number","prefix","_","times","index","key","text","value","App"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAO,kCAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,mBAAzB;;;AAEA,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,MAAM,GAAG,SAAlB,KACjBC,CAAC,CAACC,KAAF,CAAQH,MAAR,EAAiBI,KAAD,KAAY;AAC1BC,EAAAA,GAAG,EAAED,KADqB;AAE1BE,EAAAA,IAAI,EAAG,GAAEL,MAAO,GAAEG,KAAM,EAFE;AAG1BG,EAAAA,KAAK,EAAEH;AAHmB,CAAZ,CAAhB,CADF;;AAOA,SAASI,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACF,QAAC,QAAD;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,MAAM,MAFV;AAGI,MAAA,SAAS,MAHb;AAII,MAAA,OAAO,EAAET,UAAU,CAAC,CAAD,CAJvB;AAKI,MAAA,WAAW,EAAC;AALhB;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;KAZQS,G;AAcT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport React from 'react'\nimport { Dropdown } from 'semantic-ui-react'\n\nconst getOptions = (number, prefix = 'Choice ') =>\n  _.times(number, (index) => ({\n    key: index,\n    text: `${prefix}${index}`,\n    value: index,\n  }))\n\nfunction App() {\n  return (\n    <div className=\"App\">\n  <Dropdown\n      multiple\n      search\n      selection\n      options={getOptions(5)}\n      placeholder='I stay open on change'\n    />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}