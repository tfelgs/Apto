{"ast":null,"code":"var _jsxFileName = \"/Users/dylanfelgenhauer/Desktop/react-app/react-application/search-tool/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport React, { useState } from 'react';\nimport { Dropdown, Input, Grid, Button, Form, Select, Container, Segment, Divider, Pagination } from 'semantic-ui-react';\nimport { getOptions, getMetrics, getMeasures, getTimeOptions, getOperatorOptions } from './Utility';\nimport 'react-datez/dist/css/react-datez.css';\nimport { ReactDatez } from 'react-datez';\nimport { toKeyAlias } from '@babel/types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [restaurantIds, setRestaurantIds] = useState([]);\n  const [fromHour, setFromHour] = useState(6);\n  const [toHour, setToHour] = useState(29);\n  const [criteria, setCriteria] = useState([{\n    metricCode: \"\",\n    compareType: \"\",\n    value: 0,\n    operatorType: \"\"\n  }]);\n  const [totalResults, setTotalResults] = useState([]);\n  const [resultsOnPage, setResultsOnPage] = useState([]);\n  const [activePage, setActivePage] = useState(1);\n\n  let handleChange = (index, data) => {\n    let newCriteria = [...criteria];\n\n    if (data.name === \"value\") {\n      if (data.value === '') {\n        newCriteria[index][data.name] = '';\n      } else {\n        newCriteria[index][data.name] = parseInt(data.value);\n      }\n    } else {\n      newCriteria[index][data.name] = data.value;\n    }\n\n    setCriteria(newCriteria);\n    fixDate();\n  };\n\n  let addCriteria = () => {\n    setCriteria([...criteria, {\n      metricCode: \"\",\n      compareType: \"\",\n      value: 0,\n      operatorType: \"\"\n    }]);\n  };\n\n  let removeCriteria = i => {\n    let newCriteria = [...criteria];\n    newCriteria.splice(i, 1);\n    setCriteria(newCriteria);\n  };\n\n  let onSubmit = () => {\n    userPush();\n  };\n\n  let fixDate = () => {\n    var temp = startDate;\n    var tempr = endDate;\n\n    if (temp.length > 19) {\n      for (var i = 0; i < 6; i++) {\n        temp = temp.slice(0, -1);\n        tempr = tempr.slice(0, -1);\n      }\n\n      setStartDate(temp);\n      setEndDate(tempr);\n    }\n  };\n\n  let createData = () => {\n    const initialFormData = {\n      restaurantIds: restaurantIds,\n      fromDate: startDate,\n      toDate: endDate,\n      fromHour: fromHour,\n      toHour: toHour,\n      metricCriteria: criteria\n    };\n    const totalResultss = JSON.stringify(initialFormData);\n    return totalResultss;\n  };\n\n  let pageResultsCreator = () => {\n    var startNum = activePage * 20 - 20 + 1;\n    var endNum = activePage * 20 + 1;\n    var resultsList = [];\n    console.log(activePage);\n\n    for (var i = 0; i < endNum; i++) {\n      if (i >= startNum) {\n        resultsList.push(totalResults[i]);\n      }\n    }\n\n    setResultsOnPage(resultsList);\n  };\n\n  const onChange = (index, pageInfo) => {\n    setActivePage(pageInfo.activePage);\n\n    for (var i = 0; i < resultsOnPage.length; i++) {\n      console.log(resultsOnPage[i]);\n    }\n\n    pageResultsCreator();\n  };\n\n  let timeFix = data => {\n    let x = data.substring(11, 16);\n    return x;\n  };\n\n  let dateFix = data => {\n    let x = data.substring(0, 10);\n    return x;\n  };\n\n  const userPush = async () => {\n    let xxx = createData();\n    const response = await fetch('https://customsearchqueryapi.azurewebsites.net/Search/Query', {\n      method: 'POST',\n      body: xxx,\n      // string or object\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    let temp = await response.json(); //extract JSON from the http response\n\n    let tempr = [];\n\n    for (var i = 0; i < temp.length; i++) {\n      tempr.push(temp[i]);\n    }\n\n    setTotalResults(tempr);\n    pageResultsCreator();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Segment, {\n            className: \"Segment\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              centered: true,\n              children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n                columns: \"1\",\n                children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n                  textAlign: \"center\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Custom Search Query Tool\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n                columns: \"1\",\n                children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n                  children: /*#__PURE__*/_jsxDEV(Form, {\n                    onSubmit: () => onSubmit(),\n                    children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        style: {\n                          fontWeight: \"bold\"\n                        },\n                        children: \"Restaurant Id\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 144,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                        options: getOptions,\n                        placeholder: \"Select Restaurant Id\",\n                        multiple: true,\n                        selection: true,\n                        onChange: (event, data) => setRestaurantIds(data.value),\n                        value: restaurantIds\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 145,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n                        control: Select,\n                        label: \"Transaction Time Start\",\n                        options: getTimeOptions,\n                        value: fromHour,\n                        onChange: (event, data) => setFromHour(data.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 155,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                        control: Select,\n                        label: \"Transaction Time End\",\n                        options: getTimeOptions,\n                        value: toHour,\n                        onChange: (event, data) => setToHour(data.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 162,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: \"exampleDate2\",\n                          children: \"Start Date\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 170,\n                          columnNumber: 49\n                        }, this), /*#__PURE__*/_jsxDEV(ReactDatez, {\n                          name: \"dateInput\",\n                          startDate: \"01/01/2000\",\n                          endDate: new Date(),\n                          handleChange: value => {\n                            setStartDate(value);\n                          },\n                          value: startDate,\n                          allowPast: true,\n                          dateFormat: \"MM/DD/YYYY\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 171,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 169,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: \"exampleDate2\",\n                          children: \"End Date\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 184,\n                          columnNumber: 49\n                        }, this), /*#__PURE__*/_jsxDEV(ReactDatez, {\n                          name: \"dateInput\",\n                          startDate: \"01/01/2000\",\n                          endDate: new Date(),\n                          handleChange: value => {\n                            setEndDate(value);\n                          },\n                          value: endDate,\n                          allowPast: true,\n                          dateFormat: \"MM/DD/YYYY\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 185,\n                          columnNumber: 49\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 183,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 45\n                    }, this), criteria.map((crit, index) => /*#__PURE__*/_jsxDEV(Form.Group, {\n                      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n                        name: \"metricCode\",\n                        control: Select,\n                        options: getMetrics,\n                        label: \"Metric to Measure by\",\n                        placeholder: \"Choose Metric\",\n                        value: crit.metricCode,\n                        onChange: (event, data) => handleChange(index, data)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 200,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                        name: \"compareType\",\n                        control: Select,\n                        label: \"Measure\",\n                        options: getMeasures,\n                        placeholder: \"Measure\",\n                        onChange: (event, data) => handleChange(index, data),\n                        value: crit.compareType\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 209,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                        name: \"value\",\n                        control: Input,\n                        label: \"Value\",\n                        placeholder: \"Value\",\n                        onChange: (event, data) => handleChange(index, data),\n                        value: crit.value\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 218,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                        name: \"operatorType\",\n                        control: Select,\n                        label: \"Operator\",\n                        options: getOperatorOptions,\n                        placeholder: \"Operator Options\",\n                        onChange: (event, data) => handleChange(index, data),\n                        value: crit.operatorType\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 226,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                        children: index ? /*#__PURE__*/_jsxDEV(Button, {\n                          onClick: () => removeCriteria(index),\n                          color: \"red\",\n                          children: \"Remove\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 238,\n                          columnNumber: 65\n                        }, this) : null\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 235,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 53\n                    }, this)), /*#__PURE__*/_jsxDEV(Form.Group, {\n                      children: /*#__PURE__*/_jsxDEV(Form.Field, {\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          className: \"ui button\",\n                          onClick: () => addCriteria(),\n                          color: \"violet\",\n                          children: \"Add Criteria\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 246,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 245,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        color: \"olive\",\n                        type: \"submit\",\n                        children: \"Submit\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 250,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        hidden: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Segment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              class: \"ui celled table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Order Number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Resturant ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 270,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Net Amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Total Amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Items Sold\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Beverage Quantity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Discount Amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Discount Ratio\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Deleted Items\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Order Time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Refund Amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 37\n              }, this), resultsOnPage.map((criti, index) => /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    \"data-label\": \"Order Number\",\n                    children: totalResults[index].orderNumber\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    \"data-label\": \"Resturant ID\",\n                    children: totalResults[index].restaurantId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    \"data-label\": \"Date\",\n                    children: dateFix(totalResults[index].busDt)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    \"data-label\": \"Net Amount\",\n                    children: \"$\" + totalResults[index].netAmount.toFixed(2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    \"data-label\": \"Total Amount\",\n                    children: \"$\" + totalResults[index].totalAmount.toFixed(2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    \"data-label\": \"Items Sold\",\n                    children: totalResults[index].itemSoldQty\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    \"data-label\": \"Beverage Quantity\",\n                    children: totalResults[index].beverageQty\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    \"data-label\": \"Discount Amount\",\n                    children: \"$\" + totalResults[index].discountAmount.toFixed(2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    \"data-label\": \"Discount Ratio\",\n                    children: (totalResults[index].discountRatio * 100).toFixed(2) + \"%\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    \"data-label\": \"Deleted Items\",\n                    children: totalResults[index].itemDeletedAmount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    \"data-label\": \"order Time\",\n                    children: timeFix(totalResults[index].orderTime)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    \"data-label\": \"Refund Amount\",\n                    children: \"$\" + totalResults[index].refundAmount.toFixed(2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n              activePage: activePage,\n              onPageChange: onChange,\n              totalPages: totalResults.length / 20,\n              ellipsisItem: null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"VKeVV1kkJCtmzuTnngHVekCkuAQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dylanfelgenhauer/Desktop/react-app/react-application/search-tool/src/App.js"],"names":["React","useState","Dropdown","Input","Grid","Button","Form","Select","Container","Segment","Divider","Pagination","getOptions","getMetrics","getMeasures","getTimeOptions","getOperatorOptions","ReactDatez","toKeyAlias","App","startDate","setStartDate","endDate","setEndDate","restaurantIds","setRestaurantIds","fromHour","setFromHour","toHour","setToHour","criteria","setCriteria","metricCode","compareType","value","operatorType","totalResults","setTotalResults","resultsOnPage","setResultsOnPage","activePage","setActivePage","handleChange","index","data","newCriteria","name","parseInt","fixDate","addCriteria","removeCriteria","i","splice","onSubmit","userPush","temp","tempr","length","slice","createData","initialFormData","fromDate","toDate","metricCriteria","totalResultss","JSON","stringify","pageResultsCreator","startNum","endNum","resultsList","console","log","push","onChange","pageInfo","timeFix","x","substring","dateFix","xxx","response","fetch","method","body","headers","json","fontWeight","event","Date","map","crit","criti","orderNumber","restaurantId","busDt","netAmount","toFixed","totalAmount","itemSoldQty","beverageQty","discountAmount","discountRatio","itemDeletedAmount","orderTime","refundAmount"],"mappings":"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","sourcesContent":["import './App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport React, { useState } from 'react'\nimport { Dropdown, Input, Grid, Button, Form, Select, Container, Segment, Divider, Pagination} from 'semantic-ui-react'\nimport { getOptions, getMetrics, getMeasures, getTimeOptions, getOperatorOptions } from './Utility';\nimport 'react-datez/dist/css/react-datez.css';\nimport { ReactDatez } from 'react-datez'\nimport { toKeyAlias } from '@babel/types';\n\n\nfunction App() {\n  const [startDate, setStartDate] = useState(\"\")\n  const [endDate, setEndDate] = useState(\"\")\n  const [restaurantIds, setRestaurantIds] = useState([]);\n  const [fromHour, setFromHour] = useState(6);\n  const [toHour, setToHour] = useState(29);\n  const [criteria, setCriteria] = useState([{ metricCode: \"\", compareType : \"\", value: 0, operatorType: \"\" }]);\n  const [totalResults, setTotalResults] = useState([]);\n  const [resultsOnPage, setResultsOnPage] = useState([]);\n  const [activePage, setActivePage] = useState(1);\n\nlet handleChange = (index, data) => {\n    let newCriteria = [...criteria];\n    if (data.name === \"value\") {\n        if (data.value === '') {\n            newCriteria[index][data.name] = '';\n        }\n        else {\n            newCriteria[index][data.name] = parseInt(data.value);\n        }\n    }\n    else {\n        newCriteria[index][data.name] = data.value;\n    }\n    setCriteria(newCriteria);\n    fixDate()\n}\n\nlet addCriteria = () => {\n    setCriteria([...criteria, { metricCode: \"\", compareType : \"\", value: 0, operatorType: \"\" }])\n}\n\nlet removeCriteria = (i) => {\n    let newCriteria = [...criteria];\n    newCriteria.splice(i, 1);\n    setCriteria(newCriteria)\n}\n\nlet onSubmit = () => {\n    userPush()\n}\n\nlet fixDate = () => {\n        var temp = startDate\n        var tempr = endDate\n    if (temp.length > 19) {\n        for (var i=0;i<6;i++) {\n            temp = temp.slice(0, -1)\n            tempr = tempr.slice(0, -1)\n        }\n        setStartDate(temp)\n        setEndDate(tempr)\n    }\n}\n\nlet createData = () => {\n    const initialFormData = {\n        restaurantIds: restaurantIds,\n        fromDate: startDate,\n        toDate: endDate,\n        fromHour: fromHour,\n        toHour: toHour,\n        metricCriteria: criteria\n    };\n    const totalResultss = JSON.stringify(initialFormData)\n    return totalResultss\n}\n\nlet pageResultsCreator = () => {\n    var startNum = ((activePage*20) - 20) +1\n    var endNum = (activePage*20) +1\n    var resultsList = []\n    console.log(activePage)\n    for (var i=0;i<endNum;i++) {\n        if (i >= startNum) {\n            resultsList.push(totalResults[i])\n        }\n    }\n    setResultsOnPage(resultsList)\n}\n\nconst onChange = (index, pageInfo) => {\n    setActivePage(pageInfo.activePage);\n    for (var i=0;i<resultsOnPage.length;i++) {\n        console.log(resultsOnPage[i])\n    }\n    pageResultsCreator();\n};\n\nlet timeFix = (data) => {\n    let x = data.substring(11,16)\n    return x\n}\n\nlet dateFix = (data) => {\n    let x = data.substring(0,10)\n    return x\n}\n\nconst userPush = async () => {\n    let xxx = createData()\n    const response = await fetch('https://customsearchqueryapi.azurewebsites.net/Search/Query', {\n      method: 'POST',\n      body: xxx, // string or object\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    let temp = await response.json() //extract JSON from the http response\n    let tempr = []\n    for (var i=0;i<temp.length;i++) {\n        tempr.push(temp[i])\n    }\n    setTotalResults(tempr)\n    pageResultsCreator()\n  }\n\n  return (\n    <div className=\"App\">\n            <Grid>\n                <Grid.Row>\n                    <Container>\n                        <Segment className=\"Segment\">\n                            <Grid centered>\n                                <Grid.Row columns=\"1\">\n                                    <Grid.Column textAlign=\"center\">\n                                        <h3>Custom Search Query Tool</h3>\n                                    </Grid.Column>\n                                </Grid.Row>\n                                <Grid.Row columns=\"1\">\n                                    <Grid.Column>\n                                        <Form onSubmit={() => onSubmit()} >\n                                            <Form.Field>\n                                                <label style={{fontWeight: \"bold\"}}>Restaurant Id</label>\n                                                <Dropdown\n                                                    options={getOptions}\n                                                    placeholder={\"Select Restaurant Id\"}\n                                                    multiple\n                                                    selection\n                                                    onChange={(event, data) => setRestaurantIds(data.value)}\n                                                    value={restaurantIds}\n                                                />\n                                            </Form.Field>\n                                            <Form.Group>\n                                                <Form.Field\n                                                    control={Select}\n                                                    label={\"Transaction Time Start\"}\n                                                    options={getTimeOptions}\n                                                    value={fromHour}\n                                                    onChange={(event, data) => setFromHour(data.value)}\n                                                />\n                                                <Form.Field\n                                                    control={Select}\n                                                    label={\"Transaction Time End\"}\n                                                    options={getTimeOptions}\n                                                    value={toHour}\n                                                    onChange={(event, data) => setToHour(data.value)}\n                                                />\n                                                <Form.Field>\n                                                <label htmlFor=\"exampleDate2\">Start Date</label>\n                                                <ReactDatez\n                                                    name=\"dateInput\"\n                                                    startDate=\"01/01/2000\"\n                                                    endDate= {new Date()}\n                                                    handleChange={value => {\n                                                    setStartDate(value);\n                                                    }}\n                                                    value={startDate}\n                                                    allowPast= { true }\n                                                    dateFormat= \"MM/DD/YYYY\"\n                                                />\n                                                </Form.Field>\n                                                <Form.Field>\n                                                <label htmlFor=\"exampleDate2\">End Date</label>\n                                                <ReactDatez\n                                                    name=\"dateInput\"\n                                                    startDate=\"01/01/2000\"\n                                                    endDate= {new Date()}\n                                                    handleChange={value => {\n                                                    setEndDate(value);\n                                                    }}\n                                                    value={endDate}\n                                                    allowPast= { true }\n                                                    dateFormat= \"MM/DD/YYYY\"\n                                                />\n                                                </Form.Field>\n                                            </Form.Group>\n                                            {criteria.map((crit, index) => (\n                                                    <Form.Group>\n                                                        <Form.Field\n                                                            name=\"metricCode\"\n                                                            control={Select}\n                                                            options={getMetrics}\n                                                            label={\"Metric to Measure by\"}\n                                                            placeholder='Choose Metric'\n                                                            value={crit.metricCode}\n                                                            onChange={(event, data) => handleChange(index, data)}\n                                                        />\n                                                        <Form.Field\n                                                            name=\"compareType\"\n                                                            control={Select}\n                                                            label={\"Measure\"}\n                                                            options={getMeasures}\n                                                            placeholder='Measure'\n                                                            onChange={(event, data) => handleChange(index, data)}\n                                                            value={crit.compareType}\n                                                        />\n                                                        <Form.Field\n                                                            name=\"value\"\n                                                            control={Input}\n                                                            label={\"Value\"}\n                                                            placeholder='Value'\n                                                            onChange={(event, data) => handleChange(index, data)}\n                                                            value={crit.value}\n                                                        />\n                                                        <Form.Field\n                                                            name=\"operatorType\"\n                                                            control={Select}\n                                                            label={\"Operator\"}\n                                                            options={getOperatorOptions}\n                                                            placeholder='Operator Options'\n                                                            onChange={(event, data) => handleChange(index, data)}\n                                                            value={crit.operatorType}\n                                                        />\n                                                        <Form.Field>\n                                                            {\n                                                                index ?\n                                                                <Button onClick={() => removeCriteria(index)}  color=\"red\">Remove</Button>\n                                                                : null\n                                                            }\n                                                        </Form.Field>\n                                                    </Form.Group>\n                                                ))}\n                                            <Form.Group>\n                                                <Form.Field>\n                                                    <Button className='ui button' onClick={() => addCriteria()} color=\"violet\">Add Criteria</Button>\n                                                </Form.Field>\n                                            </Form.Group>\n                                            <Form.Field>\n                                                <Button color=\"olive\" type=\"submit\">\n                                                    Submit\n                                                </Button>\n                                            </Form.Field>\n                                        </Form>\n                                    </Grid.Column>\n                                </Grid.Row>\n                            </Grid>\n                        </Segment>\n                    </Container>\n                </Grid.Row>\n                <Divider hidden></Divider>\n                <Grid.Row>\n                    <Container>\n                        <Segment>\n                            <h3>Results</h3>\n                                <table class=\"ui celled table\">\n                                    <thead>\n                                        <tr>\n                                        <th>Order Number</th>\n                                        <th>Resturant ID</th>\n                                        <th>Date</th>\n                                        <th>Net Amount</th>\n                                        <th>Total Amount</th>\n                                        <th>Items Sold</th>\n                                        <th>Beverage Quantity</th>\n                                        <th>Discount Amount</th>\n                                        <th>Discount Ratio</th>\n                                        <th>Deleted Items</th>\n                                        <th>Order Time</th>\n                                        <th>Refund Amount</th>\n                                </tr></thead>\n                                    {resultsOnPage.map((criti, index) => (\n                                            <tbody>\n                                                <tr>\n                                                <td data-label=\"Order Number\">{totalResults[index].orderNumber}</td>\n                                                <td data-label=\"Resturant ID\">{totalResults[index].restaurantId}</td>\n                                                <td data-label=\"Date\">{dateFix(totalResults[index].busDt)}</td>\n                                                <td data-label=\"Net Amount\">{\"$\" + totalResults[index].netAmount.toFixed(2)}</td>\n                                                <td data-label=\"Total Amount\">{\"$\" + totalResults[index].totalAmount.toFixed(2)}</td>\n                                                <td data-label=\"Items Sold\">{totalResults[index].itemSoldQty}</td>\n                                                <td data-label=\"Beverage Quantity\">{totalResults[index].beverageQty}</td>\n                                                <td data-label=\"Discount Amount\">{\"$\" + totalResults[index].discountAmount.toFixed(2)}</td>\n                                                <td data-label=\"Discount Ratio\">{(totalResults[index].discountRatio * 100).toFixed(2) + \"%\"}</td>\n                                                <td data-label=\"Deleted Items\">{totalResults[index].itemDeletedAmount}</td>\n                                                <td data-label=\"order Time\">{timeFix(totalResults[index].orderTime)}</td>\n                                                <td data-label=\"Refund Amount\">{\"$\" + totalResults[index].refundAmount.toFixed(2)}</td>\n                                                </tr>\n                                            </tbody>\n                                    ))}\n                                </table>\n                                <Pagination activePage={activePage} onPageChange={onChange} totalPages={(totalResults.length)/20} ellipsisItem={null}/>\n                        </Segment>\n                    </Container>\n                </Grid.Row>\n            </Grid>\n        </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}