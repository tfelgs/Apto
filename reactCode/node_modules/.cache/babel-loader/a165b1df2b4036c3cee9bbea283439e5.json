{"ast":null,"code":"var _jsxFileName = \"/Users/dylanfelgenhauer/Desktop/react-app/apto/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport React, { useState, useEffect } from 'react';\nimport { Dropdown, Input, Grid, Button, Form, Select, Container, Segment, Divider, Pagination } from 'semantic-ui-react';\nimport { getOptions, getMetrics, getMeasures, getTimeOptions, getOperatorOptions } from './Utility';\nimport 'react-datez/dist/css/react-datez.css';\nimport { ReactDatez } from 'react-datez';\nimport { toKeyAlias } from '@babel/types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [restaurantIds, setRestaurantIds] = useState([]);\n  const [fromHour, setFromHour] = useState(6);\n  const [toHour, setToHour] = useState(29);\n  const [criteria, setCriteria] = useState([{\n    metricCode: \"\",\n    compareType: \"\",\n    value: 0,\n    operatorType: \"And\"\n  }]);\n  const [totalResults, setTotalResults] = useState([]);\n  const [resultsOnPage, setResultsOnPage] = useState([]);\n  const [activePage, setActivePage] = useState(1);\n  const [formUrl, setFormUrl] = useState(\"\");\n  const [resultsUrl, setResultsUrl] = useState(\"\");\n  const numberOfItemsOnPage = 20;\n\n  let handleChange = (index, data) => {\n    let newCriteria = [...criteria];\n\n    if (data.name === \"value\") {\n      if (data.value === '') {\n        newCriteria[index][data.name] = '';\n      } else {\n        newCriteria[index][data.name] = parseInt(data.value);\n      }\n    } else {\n      newCriteria[index][data.name] = data.value;\n    }\n\n    setCriteria(newCriteria);\n    fixDate();\n  };\n\n  let addCriteria = () => {\n    setCriteria([...criteria, {\n      metricCode: \"\",\n      compareType: \"\",\n      value: 0,\n      operatorType: \"\"\n    }]);\n  };\n\n  let removeCriteria = i => {\n    let newCriteria = [...criteria];\n    newCriteria.splice(i, 1);\n    setCriteria(newCriteria);\n  };\n\n  let onSubmit = () => {\n    userPush();\n  };\n\n  let onSubmitForm = () => {\n    urlPush();\n  };\n\n  let fixDate = () => {\n    var temp = startDate;\n    var tempr = endDate;\n\n    if (temp.length > 19) {\n      for (var i = 0; i < 6; i++) {\n        temp = temp.slice(0, -1);\n        tempr = tempr.slice(0, -1);\n      }\n\n      setStartDate(temp);\n      setEndDate(tempr);\n    }\n  };\n\n  let createData = () => {\n    const initialFormData = {\n      restaurantIds: restaurantIds,\n      fromDate: startDate,\n      toDate: endDate,\n      fromHour: fromHour,\n      toHour: toHour,\n      metricCriteria: criteria\n    };\n    const totalResultss = JSON.stringify(initialFormData);\n    setResultsUrl(totalResultss);\n    return totalResultss;\n  };\n\n  let pageResultsCreator = newPage => {\n    var startNum = (newPage - 1) * numberOfItemsOnPage;\n    var lengthNum = totalResults.length - 1;\n    var endNum = newPage * numberOfItemsOnPage - 1;\n    var realEndNumber = Math.min(lengthNum, endNum);\n    var resultsList = [];\n\n    for (var i = 0; i <= realEndNumber; i++) {\n      if (i >= startNum) {\n        resultsList.push(totalResults[i]);\n      }\n    }\n\n    setResultsOnPage(resultsList);\n  };\n\n  const onChange = (index, pageInfo) => {\n    setActivePage(pageInfo.activePage);\n    pageResultsCreator(pageInfo.activePage);\n  };\n\n  let timeFix = data => {\n    let x = data.substring(11, 16);\n    return x;\n  };\n\n  let dateFix = data => {\n    let x = data.substring(0, 10);\n    return x;\n  };\n\n  const userPush = async () => {\n    let xxx = createData();\n    const response = await fetch('https://customsearchqueryapi.azurewebsites.net/Search/Query', {\n      method: 'POST',\n      body: xxx,\n      // string or object\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    let temp = await response.json(); //extract JSON from the http response\n\n    let tempr = [];\n\n    for (var i = 0; i < temp.length; i++) {\n      tempr.push(temp[i]);\n    }\n\n    setTotalResults(tempr);\n  };\n\n  const urlPush = async () => {\n    let xxx = formUrl;\n    const response = await fetch('https://customsearchqueryapi.azurewebsites.net/Search/Query', {\n      method: 'POST',\n      body: xxx,\n      // string or object\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    let result = await response.json();\n    let tempr = [];\n\n    for (var i = 0; i < result.length; i++) {\n      tempr.push(result[i]);\n    }\n\n    setResultsUrl(formUrl);\n    setTotalResults(tempr);\n  };\n\n  useEffect(() => {\n    pageResultsCreator(1);\n  }, [totalResults]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"ui secondary pointing menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        class: \"active item\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        class: \"item\",\n        children: \"Supplements Index\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        class: \"item\",\n        children: \"Products on the Market\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        class: \"item\",\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"right menu\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          class: \"ui item\",\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"ui segment\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"o2nXFQYbUdnzpl5CN99hW7zwKFE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dylanfelgenhauer/Desktop/react-app/apto/src/App.js"],"names":["React","useState","useEffect","Dropdown","Input","Grid","Button","Form","Select","Container","Segment","Divider","Pagination","getOptions","getMetrics","getMeasures","getTimeOptions","getOperatorOptions","ReactDatez","toKeyAlias","App","startDate","setStartDate","endDate","setEndDate","restaurantIds","setRestaurantIds","fromHour","setFromHour","toHour","setToHour","criteria","setCriteria","metricCode","compareType","value","operatorType","totalResults","setTotalResults","resultsOnPage","setResultsOnPage","activePage","setActivePage","formUrl","setFormUrl","resultsUrl","setResultsUrl","numberOfItemsOnPage","handleChange","index","data","newCriteria","name","parseInt","fixDate","addCriteria","removeCriteria","i","splice","onSubmit","userPush","onSubmitForm","urlPush","temp","tempr","length","slice","createData","initialFormData","fromDate","toDate","metricCriteria","totalResultss","JSON","stringify","pageResultsCreator","newPage","startNum","lengthNum","endNum","realEndNumber","Math","min","resultsList","push","onChange","pageInfo","timeFix","x","substring","dateFix","xxx","response","fetch","method","body","headers","json","result"],"mappings":"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","sourcesContent":["import './App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport React, { useState, useEffect } from 'react'\nimport { Dropdown, Input, Grid, Button, Form, Select, Container, Segment, Divider, Pagination} from 'semantic-ui-react'\nimport { getOptions, getMetrics, getMeasures, getTimeOptions, getOperatorOptions } from './Utility';\nimport 'react-datez/dist/css/react-datez.css';\nimport { ReactDatez } from 'react-datez'\nimport { toKeyAlias } from '@babel/types';\n\n\nfunction App() {\n  const [startDate, setStartDate] = useState(\"\")\n  const [endDate, setEndDate] = useState(\"\")\n  const [restaurantIds, setRestaurantIds] = useState([]);\n  const [fromHour, setFromHour] = useState(6);\n  const [toHour, setToHour] = useState(29);\n  const [criteria, setCriteria] = useState([{ metricCode: \"\", compareType : \"\", value: 0, operatorType: \"And\" }]);\n  const [totalResults, setTotalResults] = useState([]);\n  const [resultsOnPage, setResultsOnPage] = useState([]);\n  const [activePage, setActivePage] = useState(1);\n  const [formUrl, setFormUrl] = useState(\"\");\n  const [resultsUrl, setResultsUrl] = useState(\"\");\n  const numberOfItemsOnPage = 20\n\nlet handleChange = (index, data) => {\n    let newCriteria = [...criteria];\n    if (data.name === \"value\") {\n        if (data.value === '') {\n            newCriteria[index][data.name] = '';\n        }\n        else {\n            newCriteria[index][data.name] = parseInt(data.value);\n        }\n    }\n    else {\n        newCriteria[index][data.name] = data.value;\n    }\n    setCriteria(newCriteria);\n    fixDate()\n}\n\nlet addCriteria = () => {\n    setCriteria([...criteria, { metricCode: \"\", compareType : \"\", value: 0, operatorType: \"\" }])\n}\n\nlet removeCriteria = (i) => {\n    let newCriteria = [...criteria];\n    newCriteria.splice(i, 1);\n    setCriteria(newCriteria)\n}\n\nlet onSubmit = () => {\n    userPush()\n}\n\nlet onSubmitForm = () => {\n    urlPush()\n}\n\nlet fixDate = () => {\n        var temp = startDate\n        var tempr = endDate\n    if (temp.length > 19) {\n        for (var i=0;i<6;i++) {\n            temp = temp.slice(0, -1)\n            tempr = tempr.slice(0, -1)\n        }\n        setStartDate(temp)\n        setEndDate(tempr)\n    }\n}\n\nlet createData = () => {\n    const initialFormData = {\n        restaurantIds: restaurantIds,\n        fromDate: startDate,\n        toDate: endDate,\n        fromHour: fromHour,\n        toHour: toHour,\n        metricCriteria: criteria\n    };\n    const totalResultss = JSON.stringify(initialFormData)\n    setResultsUrl(totalResultss)\n    return totalResultss\n}\n\nlet pageResultsCreator = (newPage) => {\n    var startNum = ((newPage - 1) * numberOfItemsOnPage)\n    var lengthNum = totalResults.length -1\n    var endNum = (newPage * numberOfItemsOnPage) - 1\n    var realEndNumber = Math.min(lengthNum, endNum)\n    var resultsList = []\n    for (var i=0;i<=realEndNumber;i++) {\n        if (i >= startNum) {\n            resultsList.push(totalResults[i])\n        }\n    }\n    setResultsOnPage(resultsList)\n}\n\nconst onChange = (index, pageInfo) => {\n    setActivePage(pageInfo.activePage);\n    pageResultsCreator(pageInfo.activePage);\n};\n\nlet timeFix = (data) => {\n    let x = data.substring(11,16)\n    return x\n}\n\nlet dateFix = (data) => {\n    let x = data.substring(0,10)\n    return x\n}\n\nconst userPush = async () => {\n    let xxx = createData()\n    const response = await fetch('https://customsearchqueryapi.azurewebsites.net/Search/Query', {\n      method: 'POST',\n      body: xxx, // string or object\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    let temp = await response.json() //extract JSON from the http response\n    let tempr = []\n    for (var i=0;i<temp.length;i++) {\n        tempr.push(temp[i])\n    }\n    setTotalResults(tempr)\n  }\n\nconst urlPush = async () => {\n    let xxx = formUrl\n    const response = await fetch('https://customsearchqueryapi.azurewebsites.net/Search/Query', {\n      method: 'POST',\n      body: xxx, // string or object\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    let result = await response.json()\n    let tempr = []\n    for (var i=0;i<result.length;i++) {\n        tempr.push(result[i])\n    }\n    setResultsUrl(formUrl)\n    setTotalResults(tempr)\n}\n\nuseEffect(() => {\n    pageResultsCreator(1)\n}, [totalResults]);\n\n\n  return (\n    <div>\n        <div class=\"ui secondary pointing menu\">\n  <a class=\"active item\">\n    Home\n  </a>\n  <a class=\"item\">\n    Supplements Index\n  </a>\n  <a class=\"item\">\n    Products on the Market\n  </a>\n  <a class=\"item\">\n      About\n  </a>\n  <div class=\"right menu\">\n    <a class=\"ui item\">\n      Profile\n    </a>\n  </div>\n</div>\n<div class=\"ui segment\">\n  <p></p>\n</div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}